{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","completed","title","cn","TodoList","todos","map","username","todosInfo","userId","usersFromServer","find","App","useState","setTodos","setUser","setTitle","hasUser","setHasUser","hasTitle","setHasTitle","formSubmitted","setFormSubmitted","handleChange","e","target","value","useEffect","action","method","onSubmit","preventDefault","startsWith","newId","Math","max","userOfToDo","userFromServer","includes","newToDo","current","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.778845b9.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\n\nimport './TodoInfo.scss';\n\nimport { UserInfo } from '../UserInfo';\n\nimport { ToDo } from '../../types/ToDo';\n\ntype Props = {\n  todo: ToDo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    user,\n    title,\n  } = todo;\n\n  return (\n    <li\n      key={id}\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {\n        user && (\n          <UserInfo user={user} />\n        )\n      }\n    </li>\n  );\n};\n","import './TodoList.scss';\n\nimport { TodoInfo } from '../TodoInfo';\n\nimport { ToDo } from '../../types/ToDo';\n\ntype Props = {\n  todos: ToDo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"TodoList\">\n    {\n      todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))\n    }\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useEffect, useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\n\nimport { ToDo } from './types/ToDo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst todosInfo: ToDo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => user.id === todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosInfo);\n  const [user, setUser] = useState('');\n  const [title, setTitle] = useState('');\n  const [hasUser, setHasUser] = useState(false);\n  const [hasTitle, setHasTitle] = useState(false);\n  const [formSubmitted, setFormSubmitted] = useState(false);\n\n  useEffect(() => {\n    if (title) {\n      setHasTitle(true);\n    }\n\n    if (user) {\n      setHasUser(true);\n    }\n  }, [title, user]);\n\n  function handleChange(e: React.BaseSyntheticEvent) {\n    const { name, value } = e.target;\n\n    if (name === 'title') {\n      setTitle(value);\n    }\n\n    if (name === 'user') {\n      setUser(value);\n    }\n  }\n\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    setFormSubmitted(true);\n\n    if (!title) {\n      setHasTitle(false);\n    }\n\n    if (!user) {\n      setHasUser(false);\n    }\n\n    if (title.startsWith(' ')) {\n      setHasTitle(false);\n      setTitle('');\n\n      return;\n    }\n\n    if (title && user) {\n      const newId = Math.max(...todos.map(todo => todo.id));\n      const userOfToDo = usersFromServer.find(userFromServer => (\n        userFromServer.name.includes(user)\n      ));\n\n      const newToDo = {\n        title,\n        completed: false,\n        userId: userOfToDo?.id,\n        id: newId + 1,\n        user: userOfToDo,\n      };\n\n      setTodos(current => ([\n        ...current,\n        newToDo,\n      ]));\n\n      setUser('');\n      setTitle('');\n      setHasTitle(false);\n      setHasUser(false);\n      setFormSubmitted(false);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              name=\"title\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChange}\n            />\n          </label>\n\n          {\n            !hasTitle && formSubmitted && (\n              <span className=\"error\">Please enter a title</span>\n            )\n          }\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={user}\n              onChange={handleChange}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n\n              {usersFromServer.map(userFromServer => (\n                <option key={userFromServer.id}>{userFromServer.name}</option>\n              ))}\n            </select>\n          </label>\n\n          {\n            !hasUser && formSubmitted && (\n              <span className=\"error\">Please choose a user</span>\n            )\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}